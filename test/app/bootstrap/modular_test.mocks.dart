// Mocks generated by Mockito 5.4.0 from annotations
// in authentication_flutter/test/app/bootstrap/modular_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:authentication_flutter/app/core/manager/session_manager.dart'
    as _i2;
import 'package:authentication_flutter/app/services/storage/preferences_service.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SessionManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockSessionManager extends _i1.Mock implements _i2.SessionManager {
  MockSessionManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> setAccessToken(String? value) => (super.noSuchMethod(
        Invocation.method(
          #setAccessToken,
          [value],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> setRefreshToken(String? value) => (super.noSuchMethod(
        Invocation.method(
          #setRefreshToken,
          [value],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [PreferencesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPreferencesService extends _i1.Mock
    implements _i4.PreferencesService {
  MockPreferencesService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> containsKey({required String? key}) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [],
          {#key: key},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  String? read({required String? key}) => (super.noSuchMethod(Invocation.method(
        #read,
        [],
        {#key: key},
      )) as String?);
  @override
  _i3.Future<bool> remove({required String? key}) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [],
          {#key: key},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<bool> save({
    required String? key,
    required String? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #save,
          [],
          {
            #key: key,
            #value: value,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
